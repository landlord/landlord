#!/usr/bin/env bash

set -e

# Builds the CLI and daemon and runs a small integration test

DIR=/tmp/landlord-test

cleanup() {
    rm -rf "$DIR"
}

trap cleanup EXIT

# Normalize dirs
SCRIPT_NAME="${BASH_SOURCE[0]}"
if [ -h "$SCRIPT_NAME" ]; then
    SCRIPT_NAME="$(readlink "$SCRIPT_NAME")"
fi
ROOT_DIR="$(cd "$(dirname "$SCRIPT_NAME")" && cd .. && pwd)"
cd "$ROOT_DIR"

# Build projects
(cd landlordd && sbt clean compile "project daemon" "set Test / Keys.test := {}" stage) &
(cd landlord && cargo clean && cargo build --release) &
wait

# Start landlordd
rm -rf "$DIR"
mkdir -p "$DIR"
landlordd/daemon/target/universal/stage/bin/landlordd --host "unix://$DIR/landlordd.sock" &
LANDLORDD_PID="$!"

while ! [ -e "$DIR/landlordd.sock" ]; do
    sleep 1
done

# Run a program that uses stdin and properties
OUTPUT=$(echo Testing | ./landlord/target/release/landlord -Dgreeting='hello world' -socket "$DIR/landlordd.sock" -cp landlordd/test/target/scala-2.12/classes example.Hello)
EXPECTED='hello world
Testing
Good Bye!'

# Shutdown landlordd
kill "$LANDLORDD_PID"
wait

# Test that we got what we expected
[ "$OUTPUT" = "$EXPECTED" ]
